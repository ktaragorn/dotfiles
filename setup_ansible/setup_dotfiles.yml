# Run with
# ansible-playbook setup_dotfiles.yml -i inventory.yml
---
- hosts: localhost
  tasks:

  - name: Install nice CLI packages on Debian systems
    apt: pkg={{item}} state=present
    with_items:
      - htop
      - byobu
      - git
      - vim
      - ncdu
    when: ansible_os_family == 'Debian'
    sudo: yes

#  - name: Install nice GUI packages on Debian systems with a GTK(?) gui installed
#    apt: pkg={{item}} state=present
#    with_items:
#      - guake
#      - caffeine
#      - qbittorrent
      #todo add more
#    when: ansible_os_family == 'Debian' and

  - name: Checkout/update dotfiles on target machine
    git: repo=https://github.com/ktaragorn/dotfiles.git dest=~/dotfiles force=no
    # Assuming localhost is always updated
    when: ansible_connection != "local"

  - name: Ensure bash files exist
    command: touch ~/.{{item}} creates=~/.{{item}}
    with_items:
    - bashrc
    - bash_profile

  - name: Ensure bash_profile sources bashrc
    lineinfile: dest=~/.bash_profile line=". ~/.bashrc"

  - name: Add source line for bashrc
    lineinfile: dest=~/.bashrc line=". ~/dotfiles/bashrc.d/source_all"

  - name: Link the basic dotfiles which are linked to .file in home
    file: src=dotfiles/{{item}} dest=~/.{{item}} state=link
    with_items:
      - vimrc
      - ngrok
      - rdebugrc
      - gitconfig
      - pryrc
      - gemrc
      - bcrc

  - name: Link inputrc
    file: src=dotfiles/bashrc.d/inputrc dest=~/.inputrc state=link

  #https://github.com/Russell91/sshrc
  - name: Link sshrc file and folder
    file: src=dotfiles/sshrc/{{item}} dest=~/.{{item}} state=link
    with_items:
      - sshrc
      - sshrc.d

  - name: Link tmux.conf in debian systems
    file: src=~/dotfiles/tmux.conf dest=~/.config/byobu/.tmux.conf state=link force=yes
    when: ansible_os_family == 'Debian'

  - name: Link tmux.conf in osx systems
    file: src=~/dotfiles/tmux.conf dest=~/.byobu/.tmux.conf state=link force=yes
    when: ansible_os_family == 'Darwin'


    # TODO RVM? Brew, tmuxinator tmux config
