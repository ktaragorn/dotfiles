#{{ansible_managed}}
# parts taken from https://www.rosehosting.com/blog/install-php-7-1-with-nginx-on-an-ubuntu-16-04-vps/
server {
	listen [::]:80 default_server;
	root /var/www/html;
	server_name _;
    index index.htm index.html index.php;

    #https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
    satisfy any;

    allow 192.168.1.0/24;
    allow 127.0.0.1;
    deny all;

    auth_basic "The Black Gate";
    auth_basic_user_file /etc/nginx/passwdfile;


	{% for service in proxied_services if not service.port == 80%}
	location /{{service.name}}/ {
		proxy_set_header Host      $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Deluge-Base "/deluge/";
		proxy_pass {{service.scheme | default("http")}}://{{service.host | default("localhost")}}:{{service.port}}{{service.terminate | default("")}};
		proxy_redirect http://{{service.host | default("localhost")}}:{{service.port}}/ $host:$server_port/{{service.name}}/;
		# https needed for webmin, / in the end needed for deluge, /in the end not needed for htpc
	}
	{% endfor %}

	location / {
	# First attempt to serve request as file, then
	# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location ~ \.php$ {
	    fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	    include snippets/fastcgi-php.conf;
	    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	}

	location ~ /\.ht {
	        deny all;
	}
}
server {
	server_name hass.middle.earth;
	allow 192.168.1.0/24;
	allow 127.0.0.1;
	deny all;
	listen [::]:80;

    proxy_buffering off;
	location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
	    proxy_pass http://localhost:8123;
	    proxy_redirect http://localhost:8123/ $host:$server_port/;
	}

    location /api/websocket {
        proxy_pass http://localhost:8123/api/websocket;
        proxy_set_header Host $host;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}