
"""""""""""""
" B A S I C
"""""""""""""
set wildmenu       " fancy command completion menu!
set showcmd        " shows incomplete command to the left of the ruler
set colorcolumn=80 " draw line at column 80

" Theme
let g:solarized_termcolors=256
set background=dark
colorscheme solarized

"""""""""""""""""
" M A P P I N G
"""""""""""""""""
:nmap <C-N><C-N> :set invnumber<CR>  " toggle line number


"""""""""""""""""
" P L U G I N 
"""""""""""""""""
let g:ctrlp_working_path_mode = 0  " CtrlP current working dir
let g:buffergator_viewport_split_policy= "T"  " Top position
let g:buffergator_split_size = 6


" Enlarge current window size
set winwidth=84
" We have to have a winheight bigger than we want to set winminheight. But if
" we set winheight to be huge before winminheight, the winminheight set will
" fail.
set winheight=5
set winminheight=5
set winheight=999
" - rails-specific
map <leader>gr :topleft :split config/routes.rb<cr>
map <leader>gg :topleft 100 :split Gemfile<cr>

" Open current directory
map <leader>d :topleft :split .<cr>

" Use Bufkill to kill current buffer
map <leader>q :bd<cr>

" Switch between last two files
nnoremap <leader><leader> <c-^>

" copy-paste from clipboard
map <leader>y "*y
map <leader>p "*p

" Can't be bothered to understand ESC vs <c-c> in insert mode
imap <c-c> <esc>
" Clear the search buffer when hitting return
function! MapCR()
  nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" OPEN FILES IN DIRECTORY OF CURRENT FILE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%

" Removes trailing spaces
function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction

nnoremap <silent> <Leader>rts :call TrimWhiteSpace()<CR>
autocmd FileType * autocmd FileWritePre    * :call TrimWhiteSpace()
autocmd FileType * autocmd FileAppendPre   * :call TrimWhiteSpace()
autocmd FileType * autocmd FilterWritePre  * :call TrimWhiteSpace()
autocmd FileType * autocmd BufWritePre     * :call TrimWhiteSpace()
